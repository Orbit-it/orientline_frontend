{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mansour\\\\Desktop\\\\OrientLine\\\\app\\\\app\\\\components\\\\ImageInput.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport colors from \"../config/colors\";\n\nfunction ImageInput(_ref) {\n  var imageUri = _ref.imageUri,\n      onChangeImage = _ref.onChangeImage;\n  useEffect(function () {\n    requestPermission();\n  }, []);\n\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n\n            if (!granted) {\n              alert(\"Activer la Permission pour acceder à la Gallerie\");\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handlePress = function handlePress() {\n    if (!imageUri) {\n      selectImage();\n    } else {\n      Alert.alert(\"Supprimer\", \"Etes-vous sure de vouloir supprimer cette image?\", [{\n        text: \"Oui\",\n        onPress: function onPress() {\n          return onChangeImage(null);\n        }\n      }, {\n        text: \"Non\"\n      }]);\n    }\n  };\n\n  var selectImage = function selectImage() {\n    var result;\n    return _regeneratorRuntime.async(function selectImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 0.5\n            }));\n\n          case 3:\n            result = _context2.sent;\n            if (!result.cancelled) onChangeImage(result.uri);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Error reading an image\", _context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, !imageUri && React.createElement(MaterialCommunityIcons, {\n    color: colors.medium,\n    name: \"camera\",\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }), imageUri && React.createElement(Image, {\n    source: {\n      uri: imageUri\n    },\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: colors.light,\n    borderRadius: 15,\n    height: 100,\n    justifyContent: \"center\",\n    marginVertical: 10,\n    overflow: \"hidden\",\n    width: 100\n  },\n  image: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n});\nexport default ImageInput;","map":{"version":3,"sources":["C:/Users/Mansour/Desktop/OrientLine/app/app/components/ImageInput.js"],"names":["React","useEffect","ImagePicker","MaterialCommunityIcons","colors","ImageInput","imageUri","onChangeImage","requestPermission","requestMediaLibraryPermissionsAsync","granted","alert","handlePress","selectImage","Alert","text","onPress","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","quality","result","cancelled","uri","console","log","styles","container","medium","image","StyleSheet","create","alignItems","backgroundColor","light","borderRadius","height","justifyContent","marginVertical","overflow","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport {\n\tView,\n\tStyleSheet,\n\tImage,\n\tTouchableWithoutFeedback,\n\tAlert,\n} from \"react-native\";\n\nimport colors from \"../config/colors\";\n\nfunction ImageInput({ imageUri, onChangeImage }) {\n\tuseEffect(() => {\n\t\trequestPermission();\n\t}, []);\n\n\tconst requestPermission = async () => {\n\t\tconst {\n\t\t\tgranted,\n\t\t} = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\t\tif (!granted) {\n\t\t\talert(\"Activer la Permission pour acceder à la Gallerie\");\n\t\t}\n\t};\n\n\tconst handlePress = () => {\n\t\tif (!imageUri) {\n\t\t\tselectImage();\n\t\t} else {\n\t\t\tAlert.alert(\n\t\t\t\t\"Supprimer\",\n\t\t\t\t\"Etes-vous sure de vouloir supprimer cette image?\",\n\t\t\t\t[\n\t\t\t\t\t{ text: \"Oui\", onPress: () => onChangeImage(null) },\n\t\t\t\t\t{ text: \"Non\" },\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t};\n\n\tconst selectImage = async () => {\n\t\ttry {\n\t\t\tconst result = await ImagePicker.launchImageLibraryAsync({\n\t\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t\t\tquality: 0.5,\n\t\t\t});\n\t\t\tif (!result.cancelled) onChangeImage(result.uri);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error reading an image\", error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<TouchableWithoutFeedback onPress={handlePress}>\n\t\t\t<View style={styles.container}>\n\t\t\t\t{!imageUri && (\n\t\t\t\t\t<MaterialCommunityIcons\n\t\t\t\t\t\tcolor={colors.medium}\n\t\t\t\t\t\tname=\"camera\"\n\t\t\t\t\t\tsize={40}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{imageUri && (\n\t\t\t\t\t<Image source={{ uri: imageUri }} style={styles.image} />\n\t\t\t\t)}\n\t\t\t</View>\n\t\t</TouchableWithoutFeedback>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\talignItems: \"center\",\n\t\tbackgroundColor: colors.light,\n\t\tborderRadius: 15,\n\t\theight: 100,\n\t\tjustifyContent: \"center\",\n\t\tmarginVertical: 10,\n\t\toverflow: \"hidden\",\n\t\twidth: 100,\n\t},\n\timage: {\n\t\theight: \"100%\",\n\t\twidth: \"100%\",\n\t},\n});\n\nexport default ImageInput;\n"]},"metadata":{},"sourceType":"module"}