{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mansour\\\\Desktop\\\\OrientLine\\\\app\\\\app\\\\screens\\\\ListingsScreen.js\";\nimport React, { useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport AppText from \"../components/Text\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport Screen from \"../components/Screen\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport useApi from \"../hooks/useApi\";\n\nfunction ListingsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var getListingsApi = useApi(listingsApi.getListings);\n  useEffect(function () {\n    getListingsApi.request();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(ActivityIndicator, {\n    visible: getListingsApi.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }), React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, getListingsApi.error && React.createElement(React.Fragment, null, React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Error: Page non actualiser!.\"), React.createElement(Button, {\n    title: \"Retry\",\n    onPress: getListingsApi.request,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })), React.createElement(FlatList, {\n    data: getListingsApi.data,\n    keyExtractor: function keyExtractor(listing) {\n      return listing.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        title: item.title,\n        subTitle: item.description,\n        imageUrl: item.images[0].url,\n        onPress: function onPress() {\n          return navigation.navigate(routes.LISTING_DETAILS, item);\n        },\n        thumbnailUrl: item.images[0].thumbnailUrl,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 10,\n    backgroundColor: colors.light\n  }\n});\nexport default ListingsScreen;","map":{"version":3,"sources":["C:/Users/Mansour/Desktop/OrientLine/app/app/screens/ListingsScreen.js"],"names":["React","useEffect","ActivityIndicator","AppText","Button","Card","Screen","colors","listingsApi","routes","useApi","ListingsScreen","navigation","getListingsApi","getListings","request","loading","styles","screen","error","data","listing","id","toString","item","title","description","images","url","navigate","LISTING_DETAILS","thumbnailUrl","StyleSheet","create","padding","backgroundColor","light"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,OAAOC,iBAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AAEA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;;AAEA,SAASC,cAAT,OAAwC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACvC,MAAMC,cAAc,GAAGH,MAAM,CAACF,WAAW,CAACM,WAAb,CAA7B;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACfY,IAAAA,cAAc,CAACE,OAAf;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,SACC,0CACC,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEF,cAAc,CAACG,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,cAAc,CAACM,KAAf,IACA,0CACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADD,EAEC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,OADP;AAEC,IAAA,OAAO,EAAEN,cAAc,CAACE,OAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAFF,EAUC,oBAAC,QAAD;AACC,IAAA,IAAI,EAAEF,cAAc,CAACO,IADtB;AAEC,IAAA,YAAY,EAAE,sBAACC,OAAD;AAAA,aAAaA,OAAO,CAACC,EAAR,CAAWC,QAAX,EAAb;AAAA,KAFf;AAGC,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACX,oBAAC,IAAD;AACC,QAAA,KAAK,EAAEA,IAAI,CAACC,KADb;AAEC,QAAA,QAAQ,EAAED,IAAI,CAACE,WAFhB;AAGC,QAAA,QAAQ,EAAEF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,GAH1B;AAIC,QAAA,OAAO,EAAE;AAAA,iBACRhB,UAAU,CAACiB,QAAX,CACCpB,MAAM,CAACqB,eADR,EAECN,IAFD,CADQ;AAAA,SAJV;AAUC,QAAA,YAAY,EAAEA,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeI,YAV9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVD,CAFD,CADD;AAkCA;;AAED,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAChCf,EAAAA,MAAM,EAAE;AACPgB,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,eAAe,EAAE5B,MAAM,CAAC6B;AAFjB;AADwB,CAAlB,CAAf;AAOA,eAAezB,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { FlatList, StyleSheet } from \"react-native\";\n\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport AppText from \"../components/Text\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport Screen from \"../components/Screen\";\n\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport useApi from \"../hooks/useApi\";\n\nfunction ListingsScreen({ navigation }) {\n\tconst getListingsApi = useApi(listingsApi.getListings);\n\n\tuseEffect(() => {\n\t\tgetListingsApi.request();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ActivityIndicator visible={getListingsApi.loading} />\n\t\t\t<Screen style={styles.screen}>\n\t\t\t\t{getListingsApi.error && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<AppText>Error: Page non actualiser!.</AppText>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttitle=\"Retry\"\n\t\t\t\t\t\t\tonPress={getListingsApi.request}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t<FlatList\n\t\t\t\t\tdata={getListingsApi.data}\n\t\t\t\t\tkeyExtractor={(listing) => listing.id.toString()}\n\t\t\t\t\trenderItem={({ item }) => (\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\ttitle={item.title}\n\t\t\t\t\t\t\tsubTitle={item.description}\n\t\t\t\t\t\t\timageUrl={item.images[0].url}\n\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\tnavigation.navigate(\n\t\t\t\t\t\t\t\t\troutes.LISTING_DETAILS,\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthumbnailUrl={item.images[0].thumbnailUrl}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Screen>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tscreen: {\n\t\tpadding: 10,\n\t\tbackgroundColor: colors.light,\n\t},\n});\n\nexport default ListingsScreen;\n"]},"metadata":{},"sourceType":"module"}