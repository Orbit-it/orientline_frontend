{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport dayjs from \"dayjs\";\nvar prefix = \"cache\";\nvar expiryInMinutes = 5;\n\nvar store = function store(key, value) {\n  var item;\n  return _regeneratorRuntime.async(function store$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          item = {\n            value: value,\n            timestamp: Date.now()\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(prefix + key, JSON.stringify(item)));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar isExpired = function isExpired(item) {\n  var now = dayjs();\n  var storedTime = dayjs(item.timestamp);\n  return now.diff(storedTime, \"minute\") > expiryInMinutes, _readOnlyError(\"isExpired\");\n};\n\nvar get = function get(key) {\n  var value, item;\n  return _regeneratorRuntime.async(function get$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(prefix + key));\n\n        case 3:\n          value = _context2.sent;\n          item = JSON.parse(value);\n\n          if (item) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 7:\n          if (!isExpired(item)) {\n            _context2.next = 11;\n            break;\n          }\n\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(prefix + key));\n\n        case 10:\n          return _context2.abrupt(\"return\", null);\n\n        case 11:\n          return _context2.abrupt(\"return\", item.value);\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 14]], Promise);\n};\n\nexport default {\n  store: store,\n  get: get\n};","map":{"version":3,"sources":["C:/Users/Mansour/Desktop/OrientLine/app/app/utility/cache.js"],"names":["AsyncStorage","dayjs","prefix","expiryInMinutes","store","key","value","item","timestamp","Date","now","setItem","JSON","stringify","console","log","isExpired","storedTime","diff","get","getItem","parse","removeItem"],"mappings":";;SAASA,Y;AACT,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,MAAM,GAAG,OAAf;AACA,IAAMC,eAAe,GAAG,CAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAENC,UAAAA,IAFM,GAEC;AACZD,YAAAA,KAAK,EAALA,KADY;AAEZE,YAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAFC,WAFD;AAAA;AAAA,2CAMNV,YAAY,CAACW,OAAb,CAAqBT,MAAM,GAAGG,GAA9B,EAAmCO,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAnC,CANM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQZO,UAAAA,OAAO,CAACC,GAAR;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;AAYA,IAAMC,SAAS,GAAG,mBAACT,IAAD,EAAU;AAC3B,MAAMG,GAAG,GAAGT,KAAK,EAAjB;AACA,MAAMgB,UAAU,GAAGhB,KAAK,CAACM,IAAI,CAACC,SAAN,CAAxB;AAEA,SAAoBE,GAAG,CAACQ,IAAJ,CAASD,UAAT,EAAqB,QAArB,IAAiCd,eAArD;AACA,CALD;;AAOA,IAAMgB,GAAG,GAAG,SAANA,GAAM,CAAOd,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEUL,YAAY,CAACoB,OAAb,CAAqBlB,MAAM,GAAGG,GAA9B,CAFV;;AAAA;AAEJC,UAAAA,KAFI;AAGJC,UAAAA,IAHI,GAGGK,IAAI,CAACS,KAAL,CAAWf,KAAX,CAHH;;AAAA,cAKLC,IALK;AAAA;AAAA;AAAA;;AAAA,4CAKQ,IALR;;AAAA;AAAA,eAONS,SAAS,CAACT,IAAD,CAPH;AAAA;AAAA;AAAA;;AAAA;AAAA,2CASHP,YAAY,CAACsB,UAAb,CAAwBpB,MAAM,GAAGG,GAAjC,CATG;;AAAA;AAAA,4CAUF,IAVE;;AAAA;AAAA,4CAaHE,IAAI,CAACD,KAbF;;AAAA;AAAA;AAAA;AAeVQ,UAAAA,OAAO,CAACC,GAAR;;AAfU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ;;AAmBA,eAAe;AACdX,EAAAA,KAAK,EAALA,KADc;AAEde,EAAAA,GAAG,EAAHA;AAFc,CAAf","sourcesContent":["import { AsyncStorage } from \"react-native\";\nimport dayjs from \"dayjs\";\n\nconst prefix = \"cache\";\nconst expiryInMinutes = 5;\n\nconst store = async (key, value) => {\n\ttry {\n\t\tconst item = {\n\t\t\tvalue,\n\t\t\ttimestamp: Date.now(),\n\t\t};\n\t\tawait AsyncStorage.setItem(prefix + key, JSON.stringify(item));\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\nconst isExpired = (item) => {\n\tconst now = dayjs();\n\tconst storedTime = dayjs(item.timestamp);\n\n\treturn (isExpired = now.diff(storedTime, \"minute\") > expiryInMinutes);\n};\n\nconst get = async (key) => {\n\ttry {\n\t\tconst value = await AsyncStorage.getItem(prefix + key);\n\t\tconst item = JSON.parse(value);\n\n\t\tif (!item) return null;\n\n\t\tif (isExpired(item)) {\n\t\t\t// Command Query Separation (CQS)\n\t\t\tawait AsyncStorage.removeItem(prefix + key);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn item.value;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\nexport default {\n\tstore,\n\tget,\n};\n"]},"metadata":{},"sourceType":"module"}