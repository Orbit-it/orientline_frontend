{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mansour\\\\Desktop\\\\OrientLine\\\\app\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AppLoading from \"expo\";\nimport AppNavigator from \"./app/navigation/AppNavigator\";\nimport AuthNavigator from \"./app/navigation/AuthNavigator\";\nimport navigationTheme from \"./app/navigation/navigationTheme\";\nimport { navigationRef } from \"./app/navigation/rootNavigation\";\nimport OfflineNotice from \"./app/components/OfflineNotice\";\nimport AuthContext from \"./app/auth/context\";\nimport authStorage from \"./app/auth/storage\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isReady = _useState4[0],\n      setIsReady = _useState4[1];\n\n  var restoreUser = function restoreUser() {\n    var user;\n    return _regeneratorRuntime.async(function restoreUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.getUser());\n\n          case 2:\n            user = _context.sent;\n            if (user) setUser(user);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, React.createElement(OfflineNotice, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }), React.createElement(NavigationContainer, {\n    ref: navigationRef,\n    theme: navigationTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, user ? React.createElement(AppNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }) : React.createElement(AuthNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 32\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Mansour/Desktop/OrientLine/app/App.js"],"names":["React","useState","NavigationContainer","AppLoading","AppNavigator","AuthNavigator","navigationTheme","navigationRef","OfflineNotice","AuthContext","authStorage","App","user","setUser","isReady","setIsReady","restoreUser","getUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAQC,UAAR,MAAyB,MAAzB;AAEA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,eAAP;AACA,SAASC,aAAT;AAEA,OAAOC,aAAP;AAEA,OAAOC,WAAP;AACA,OAAOC,WAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC7B,kBAAwBV,QAAQ,EAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8BZ,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOa,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAN,WAAW,CAACO,OAAZ,EADA;;AAAA;AACbL,YAAAA,IADa;AAEnB,gBAAIA,IAAJ,EAAUC,OAAO,CAACD,IAAD,CAAP;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAaA,SACC,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,OAAO,EAAPA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAEN,aAA1B;AAAyC,IAAA,KAAK,EAAED,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEM,IAAI,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAsB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5B,CAFD,CADD;AAQA","sourcesContent":["import React, { useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport  AppLoading  from \"expo\";\n\nimport AppNavigator from \"./app/navigation/AppNavigator\";\nimport AuthNavigator from \"./app/navigation/AuthNavigator\";\nimport navigationTheme from \"./app/navigation/navigationTheme\";\nimport { navigationRef } from \"./app/navigation/rootNavigation\";\n\nimport OfflineNotice from \"./app/components/OfflineNotice\";\n\nimport AuthContext from \"./app/auth/context\";\nimport authStorage from \"./app/auth/storage\";\n\nexport default function App() {\n\tconst [user, setUser] = useState();\n\tconst [isReady, setIsReady] = useState(false);\n\n\tconst restoreUser = async () => {\n\t\tconst user = await authStorage.getUser();\n\t\tif (user) setUser(user);\n\t};\n\n\t/*if (!isReady) \n\t\treturn (   \n\t\t\t<AppLoading\n\t\t\t\tstartAsync={restoreUser}\n\t\t\t\tonFinish={() => setIsReady(true)}\n\t\t\t/>\n\t\t);   */\n\n\treturn (\n\t\t<AuthContext.Provider value={{ user, setUser }}>\n\t\t\t<OfflineNotice />\n\t\t\t<NavigationContainer ref={navigationRef} theme={navigationTheme}>\n\t\t\t\t{user ? <AppNavigator /> : <AuthNavigator />}\n\t\t\t</NavigationContainer>\n\t\t</AuthContext.Provider>\n\t);  \n}"]},"metadata":{},"sourceType":"module"}