{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState } from \"react\";\nexport default useApi = function useApi(apiFunc) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var request = function request() {\n    var response,\n        _args = arguments;\n    return _regeneratorRuntime.async(function request$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(apiFunc.apply(void 0, _args));\n\n          case 3:\n            response = _context.sent;\n            setLoading(false);\n            setError(!response.ok);\n            setData(response.data);\n            return _context.abrupt(\"return\", response);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    data: data,\n    error: error,\n    loading: loading,\n    request: request\n  };\n};","map":{"version":3,"sources":["C:/Users/Mansour/Desktop/OrientLine/app/app/hooks/useApi.js"],"names":["useState","useApi","apiFunc","data","setData","error","setError","loading","setLoading","request","response","ok"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAeC,MAAM,GAAG,gBAACC,OAAD,EAAa;AACpC,kBAAwBF,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BJ,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BN,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACfD,YAAAA,UAAU,CAAC,IAAD,CAAV;AADe;AAAA,6CAEQN,OAAO,MAAP,eAFR;;AAAA;AAETQ,YAAAA,QAFS;AAGfF,YAAAA,UAAU,CAAC,KAAD,CAAV;AAEAF,YAAAA,QAAQ,CAAC,CAACI,QAAQ,CAACC,EAAX,CAAR;AACAP,YAAAA,OAAO,CAACM,QAAQ,CAACP,IAAV,CAAP;AANe,6CAORO,QAPQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUA,SAAO;AAAEP,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,KAAK,EAALA,KAAR;AAAeE,IAAAA,OAAO,EAAPA,OAAf;AAAwBE,IAAAA,OAAO,EAAPA;AAAxB,GAAP;AACA,CAhBD","sourcesContent":["import { useState } from \"react\";\n\nexport default useApi = (apiFunc) => {\n\tconst [data, setData] = useState([]);\n\tconst [error, setError] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst request = async (...args) => {\n\t\tsetLoading(true);\n\t\tconst response = await apiFunc(...args);\n\t\tsetLoading(false);\n\n\t\tsetError(!response.ok);\n\t\tsetData(response.data);\n\t\treturn response;\n\t};\n\n\treturn { data, error, loading, request };\n};\n"]},"metadata":{},"sourceType":"module"}