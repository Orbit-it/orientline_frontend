{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mansour\\\\Desktop\\\\OrientLine\\\\app\\\\app\\\\screens\\\\ListingsScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport AppText from \"../components/Text\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport Screen from \"../components/Screen\";\nimport useAuth from \"../auth/useAuth\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport useApi from \"../hooks/useApi\";\nimport { set } from \"react-native-reanimated\";\nimport { ListItemDeleteAction } from \"../components/lists\";\n\nfunction ListingsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var getListingsApi = useApi(listingsApi.getListings);\n\n  var _useState = useState(getListingsApi.data),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user,\n      logOut = _useAuth.logOut;\n\n  var handleDelete = function handleDelete(listing) {\n    setPosts(posts.filter(function (l) {\n      return l.id !== listing.id;\n    }));\n  };\n\n  useEffect(function () {\n    getListingsApi.request();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(ActivityIndicator, {\n    visible: getListingsApi.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }), React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, getListingsApi.error && React.createElement(React.Fragment, null, React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Error: Page non actualiser!.\"), React.createElement(Button, {\n    title: \"Ressayer\",\n    onPress: getListingsApi.request,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  })), React.createElement(FlatList, {\n    data: getListingsApi.data,\n    keyExtractor: function keyExtractor(listing) {\n      return listing.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        title: item.title,\n        subTitle: item.description,\n        imageUrl: item.images[0].url,\n        onPress: function onPress() {\n          return navigation.navigate(routes.LISTING_DETAILS, item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 10,\n    backgroundColor: colors.light\n  }\n});\nexport default ListingsScreen;","map":{"version":3,"sources":["C:/Users/Mansour/Desktop/OrientLine/app/app/screens/ListingsScreen.js"],"names":["React","useEffect","useState","ActivityIndicator","AppText","Button","Card","Screen","useAuth","colors","listingsApi","routes","useApi","set","ListItemDeleteAction","ListingsScreen","navigation","getListingsApi","getListings","data","posts","setPosts","user","logOut","handleDelete","listing","filter","l","id","request","loading","styles","screen","error","toString","item","title","description","images","url","navigate","LISTING_DETAILS","StyleSheet","create","padding","backgroundColor","light"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAGA,OAAOC,iBAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AAIA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,SAASC,GAAT,QAAoB,yBAApB;AACA,SAASC,oBAAT;;AAEA,SAASC,cAAT,OAAwC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACvC,MAAMC,cAAc,GAAGL,MAAM,CAACF,WAAW,CAACQ,WAAb,CAA7B;;AACA,kBAA0BhB,QAAQ,CAACe,cAAc,CAACE,IAAhB,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,iBAAyBb,OAAO,EAAhC;AAAA,MAAQc,IAAR,YAAQA,IAAR;AAAA,MAAcC,MAAd,YAAcA,MAAd;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAY;AAEhCJ,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAa,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,EAAF,KAASH,OAAO,CAACG,EAAxB;AAAA,KAAb,CAAD,CAAR;AACA,GAHD;;AAMA3B,EAAAA,SAAS,CAAC,YAAM;AACfgB,IAAAA,cAAc,CAACY,OAAf;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,SACC,0CACC,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEZ,cAAc,CAACa,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEf,cAAc,CAACgB,KAAf,IACA,0CACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADD,EAEC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,UADP;AAEC,IAAA,OAAO,EAAEhB,cAAc,CAACY,OAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAFF,EAUC,oBAAC,QAAD;AACM,IAAA,IAAI,EAAEZ,cAAc,CAACE,IAD3B;AAEM,IAAA,YAAY,EAAE,sBAACM,OAAD;AAAA,aAAaA,OAAO,CAACG,EAAR,CAAWM,QAAX,EAAb;AAAA,KAFpB;AAGM,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACjB,oBAAC,IAAD;AACC,QAAA,KAAK,EAAEA,IAAI,CAACC,KADb;AAEC,QAAA,QAAQ,EAAED,IAAI,CAACE,WAFhB;AAGC,QAAA,QAAQ,EAAEF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,GAH1B;AAIC,QAAA,OAAO,EAAE;AAAA,iBAAMvB,UAAU,CAACwB,QAAX,CAAoB7B,MAAM,CAAC8B,eAA3B,EAA4CN,IAA5C,CAAN;AAAA,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADiB;AAAA,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVD,CAFD,CADD;AA6BA;;AAED,IAAMJ,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAChCX,EAAAA,MAAM,EAAE;AACPY,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,eAAe,EAAEpC,MAAM,CAACqC;AAFjB;AADwB,CAAlB,CAAf;AAOA,eAAe/B,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FlatList, StyleSheet, Text } from \"react-native\";\n\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport AppText from \"../components/Text\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport Screen from \"../components/Screen\";\nimport useAuth from \"../auth/useAuth\"\n//import userManagerFunction from './AccountScreen';\n//  {(user.accountType == 'Particulier')?<Text>{user.accountType}</Text>:<Text>render false</Text>}\n\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport useApi from \"../hooks/useApi\";\nimport { set } from \"react-native-reanimated\";\nimport { ListItemDeleteAction } from \"../components/lists\";\n\nfunction ListingsScreen({ navigation }) {\n\tconst getListingsApi = useApi(listingsApi.getListings);\n\tconst [posts, setPosts] = useState(getListingsApi.data)\n\tconst { user, logOut } = useAuth();\n\n\tconst handleDelete = (listing) =>{\n\t\t//delet post from the list of posts\n\t\tsetPosts(posts.filter((l) => l.id !== listing.id))\n\t}\n\t\n\n\tuseEffect(() => {\n\t\tgetListingsApi.request();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ActivityIndicator visible={getListingsApi.loading} />\n\t\t\t<Screen style={styles.screen}>\n\t\t\t\t{getListingsApi.error && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<AppText>Error: Page non actualiser!.</AppText>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttitle=\"Ressayer\"\n\t\t\t\t\t\t\tonPress={getListingsApi.request}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t<FlatList\n        \t\tdata={getListingsApi.data}\n        \t\tkeyExtractor={(listing) => listing.id.toString()}\n        \t\trenderItem={({ item }) => (\n\t\t\t\t\t<Card\n\t\t\t\t\t\ttitle={item.title}\n\t\t\t\t\t\tsubTitle={item.description}\n\t\t\t\t\t\timageUrl={item.images[0].url}\n\t\t\t\t\t\tonPress={() => navigation.navigate(routes.LISTING_DETAILS, item)}\n\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t{/*(user.accountType == 'Particulier')?<Text>{user.accountType}</Text>:<Text>render false</Text>*/}\n\t\t\t</Screen>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tscreen: {\n\t\tpadding: 10,\n\t\tbackgroundColor: colors.light,\n\t},\n});\n\nexport default ListingsScreen;\n\n\n\n\n\n/*\nimport React, { useEffect } from \"react\";\nimport { FlatList, StyleSheet } from \"react-native\";\n\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport AppText from \"../components/Text\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport Screen from \"../components/Screen\";\n\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport useApi from \"../hooks/useApi\";\n\nfunction ListingsScreen({ navigation }) {\n\tconst getListingsApi = useApi(listingsApi.getListings);\n\n\tuseEffect(() => {\n\t\tgetListingsApi.request();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ActivityIndicator visible={getListingsApi.loading} />\n\t\t\t<Screen style={styles.screen}>\n\t\t\t\t{getListingsApi.error && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<AppText>Erreur de Connexion: Page non actualis√©e !</AppText>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttitle=\"Reessayer\"\n\t\t\t\t\t\t\tonPress={getListingsApi.request}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t<FlatList\n\t\t\t\t\tdata={getListingsApi.data}\n\t\t\t\t\tkeyExtractor={(listing) => listing.id.toString()}\n\t\t\t\t\trenderItem={({ item }) => (\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\ttitle={item.title}\n\t\t\t\t\t\t\tsubTitle={item.description}\n\t\t\t\t\t\t\timageUrl={item.images[0].url}\n\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\tnavigation.navigate(\n\t\t\t\t\t\t\t\t\troutes.LISTING_DETAILS,\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthumbnailUrl={item.images[0].thumbnailUrl}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Screen>\n\t\t</>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tscreen: {\n\t\tpadding: 10,\n\t\tbackgroundColor: colors.light,\n\t},\n});\n\nexport default ListingsScreen;   */\n"]},"metadata":{},"sourceType":"module"}